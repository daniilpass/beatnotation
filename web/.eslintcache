[{"E:\\Workspace\\git\\beat\\web\\src\\index.js":"1","E:\\Workspace\\git\\beat\\web\\src\\components\\app\\App.js":"2","E:\\Workspace\\git\\beat\\web\\src\\components\\notesRenderer\\notesRenderer.js":"3","E:\\Workspace\\git\\beat\\web\\src\\components\\notesRenderer\\NotesRenderer.js":"4","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\editor.js":"5","E:\\Workspace\\git\\beat\\web\\src\\components\\app\\version\\version.js":"6","E:\\Workspace\\git\\beat\\web\\src\\components\\app\\header\\header.js":"7","E:\\Workspace\\git\\beat\\web\\src\\components\\userFileReader\\userFileReader.js":"8","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\track.js":"9","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\note.js":"10","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\trackControl.js":"11","E:\\Workspace\\git\\beat\\web\\src\\assets\\data\\tracksData.js":"12","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\takt.js":"13","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\editorContainer.js":"14","E:\\Workspace\\git\\beat\\web\\src\\redux\\actions\\index.js":"15","E:\\Workspace\\git\\beat\\web\\src\\redux\\actions\\editor.js":"16","E:\\Workspace\\git\\beat\\web\\src\\redux\\types.js":"17","E:\\Workspace\\git\\beat\\web\\src\\redux\\store.js":"18","E:\\Workspace\\git\\beat\\web\\src\\redux\\reducers\\index.js":"19","E:\\Workspace\\git\\beat\\web\\src\\redux\\reducers\\editor.js":"20","E:\\Workspace\\git\\beat\\web\\src\\components\\notesRenderer\\notesRenderContainer.js":"21","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\toolbar\\toolbar.js":"22","E:\\Workspace\\git\\beat\\web\\src\\redux\\dictionary\\playerStates.js":"23","E:\\Workspace\\git\\beat\\web\\src\\redux\\selectors.js":"24","E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\tracksPlayer\\tracksPlayer.js":"25"},{"size":749,"mtime":1612526728383,"results":"26","hashOfConfig":"27"},{"size":1159,"mtime":1612528597894,"results":"28","hashOfConfig":"27"},{"size":24246,"mtime":1612528547358,"results":"29","hashOfConfig":"27"},{"size":24246,"mtime":1612528547358,"results":"30","hashOfConfig":"27"},{"size":10725,"mtime":1612655621546,"results":"31","hashOfConfig":"27"},{"size":259,"mtime":1612514863470,"results":"32","hashOfConfig":"27"},{"size":260,"mtime":1612514841587,"results":"33","hashOfConfig":"27"},{"size":1037,"mtime":1612514324540,"results":"34","hashOfConfig":"27"},{"size":2298,"mtime":1612523005792,"results":"35","hashOfConfig":"27"},{"size":1740,"mtime":1612467988514,"results":"36","hashOfConfig":"27"},{"size":2983,"mtime":1612477762775,"results":"37","hashOfConfig":"27"},{"size":2001,"mtime":1612522922833,"results":"38","hashOfConfig":"27"},{"size":2513,"mtime":1612636823799,"results":"39","hashOfConfig":"27"},{"size":614,"mtime":1612654749736,"results":"40","hashOfConfig":"27"},{"size":25,"mtime":1612525405702,"results":"41","hashOfConfig":"27"},{"size":2584,"mtime":1612653414732,"results":"42","hashOfConfig":"27"},{"size":709,"mtime":1612651125931,"results":"43","hashOfConfig":"27"},{"size":191,"mtime":1612525570191,"results":"44","hashOfConfig":"27"},{"size":114,"mtime":1612525469147,"results":"45","hashOfConfig":"27"},{"size":14178,"mtime":1612695978412,"results":"46","hashOfConfig":"27"},{"size":301,"mtime":1612528605430,"results":"47","hashOfConfig":"27"},{"size":7317,"mtime":1612651782546,"results":"48","hashOfConfig":"27"},{"size":87,"mtime":1612533254976,"results":"49","hashOfConfig":"27"},{"size":989,"mtime":1612654744694,"results":"50","hashOfConfig":"27"},{"size":4868,"mtime":1612655315576,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1gmhed2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},"E:\\Workspace\\git\\beat\\web\\src\\index.js",[],["105","106"],"E:\\Workspace\\git\\beat\\web\\src\\components\\app\\App.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\notesRenderer\\notesRenderer.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\notesRenderer\\NotesRenderer.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\editor.js",["107"],"import React from \"react\";\r\n\r\nimport Toolbar from \"./toolbar/toolbar\";\r\nimport Track from \"./track/track\";\r\nimport * as PlayerStates from \"../../redux/dictionary/playerStates\";\r\nimport TracksPlayer from \"./tracksPlayer/tracksPlayer\";\r\n\r\nconst requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\r\n\r\nexport default class Editor extends React.Component {\r\n  constructor(props){\r\n      super(props);    \r\n\r\n      //REFS      \r\n      this.tracksContainerRef = React.createRef();\r\n      this.timePointerRef = React.createRef();\r\n      this.timeTextRef = React.createRef(); \r\n      this.tracksPlayerRef = React.createRef();  \r\n  }\r\n\r\n  /*\r\n  * LIFECYCLE\r\n  */\r\n\r\n  componentDidMount () {\r\n    this.addEvents();\r\n    this.tryDrawNotes();\r\n    this.updateTimeControls();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Если изменился параметр отрисовки, то перерисую ноты\r\n    if (this.props.realtimeRender === true && prevProps.realtimeRender === false) {\r\n      this.tryDrawNotes();\r\n    }\r\n    \r\n    // Изменилось время начала проигрывания или статус плеера, то перерисую контролы зависящие от времени\r\n    if (this.props.baseTime !== prevProps.baseTime || this.props.playerState !== prevProps.playerState) {\r\n      this.updateTimeControls();\r\n    }\r\n    \r\n    //Auto scroll\r\n    //Получаю координату клика внутри временной шкалы\r\n    if (this.props.tracksLengthInTakts > prevProps.tracksLengthInTakts) {      \r\n      this.scrollTracksConatiner();\r\n    }     \r\n  }\r\n\r\n  addEvents() {\r\n    document.addEventListener(\"keyup\", this.handleKeyDown);\r\n    document.addEventListener('keydown', function (e) {\r\n        if (e.keyCode === 32 || e.code === \"Space\") {\r\n            e.preventDefault();\r\n        }\r\n    }, false)\r\n    this.tracksContainerRef.current.addEventListener('wheel', this.handleTracksWheel);\r\n  }\r\n\r\n  scrollTracksConatiner = () => {\r\n    console.log(\"Auto scroll\");\r\n    let el = this.tracksContainerRef.current; \r\n    el.scrollLeft=el.scrollLeft+this.props.noteWidth*this.props.notesInTakt;\r\n  }\r\n\r\n  // DRAW NOTES\r\n  tryDrawNotes(force) {\r\n    if (!this.props.realtimeRender && !force) {\r\n      return;\r\n    }\r\n\r\n    //console.log('tryDrawNotes');\r\n    let maxTaktCount = 0;\r\n\r\n    for (let tIdx = 0; tIdx < this.props.tracks.length; tIdx++) {\r\n      const _track = this.props.tracks[tIdx];\r\n      \r\n      for (let taktIdx = 0; taktIdx < _track.takts.length; taktIdx++) {\r\n        const _takt = _track.takts[taktIdx];\r\n        let tmpMaxTaktCount = (taktIdx + 1); // make +1 to convert index to count\r\n        maxTaktCount = (_takt.notes.lastIndexOf(1) >= 0 && tmpMaxTaktCount > maxTaktCount) ?  tmpMaxTaktCount : maxTaktCount; \r\n      }\r\n    } \r\n\r\n    this.props.onRenderNotes && this.props.onRenderNotes(this.props.tracks, maxTaktCount, this.props.bpm, this.props.timeSignature, this.props.notesInTakt);\r\n  }\r\n \r\n  updateTimeControls() {    \r\n    requestAnimationFrame(() => {\r\n      this.timeTextRef.current.innerText = \"Time: \" + this.getFormattedTime;\r\n      this.timePointerRef.current.style.left = this.timePointerXPos + \"px\";\r\n    });    \r\n  }\r\n\r\n  /*\r\n  * WORKSPACE EVENTS\r\n  */\r\n  handleNoteClick = (trackIndex, taktIndex, noteIndex, level) => {\r\n    //console.log('handleNoteClick', trackIndex, taktIndex, noteIndex)\r\n\r\n    //HACK: not use redux state update for performance, note update state itself\r\n    let track = this.props.tracks[trackIndex];\r\n    let takt = track.takts[taktIndex];\r\n    takt.notes[noteIndex] = level;\r\n    //track.ts = Date.now();\r\n\r\n    // Проигрываю выбранную ноту\r\n    if (level > 0 && this.props.playbackNotes) {\r\n      this.tracksPlayerRef.current.playTrackSound(trackIndex);\r\n    }\r\n\r\n    // Рисую ноты\r\n    this.tryDrawNotes();\r\n  }\r\n\r\n  handleTrackVolumeChange = (trackIndex, value) => {\r\n    console.log(\"handleTrackVolumeChange\", trackIndex, value);\r\n    this.props.setTrackVolume(trackIndex, value);\r\n  }\r\n\r\n  handleTimelineClick = (e) => {   \r\n    console.log('handleTimelineClick'); \r\n    e.preventDefault();\r\n    //Получаю координату клика внутри временной шкалы\r\n    let parentContainer = e.currentTarget.parentNode;\r\n    let targetX = e.pageX - e.currentTarget.offsetLeft + parentContainer.scrollLeft;\r\n\r\n    // Вычисляю положение относительно нот\r\n    let notePosition = targetX / this.props.noteWidth;\r\n    let newTimestamp = Math.trunc(notePosition / this.props.bpms / this.props.notesInPartCount);\r\n    \r\n    //TODO: обходное решение\r\n    // Говорю, что мы не вконце\r\n    this.props.setEndOfTrack(false);\r\n\r\n    // Обновляю время\r\n    this.props.setBaseTime(newTimestamp, Date.now());    \r\n  }\r\n\r\n  handleTracksWheel = (e) => {\r\n    e.preventDefault();\r\n    this.tracksContainerRef.current.scrollLeft += e.deltaY;;\r\n  }\r\n\r\n\r\n  /*\r\n  TAKT ACTIONs\r\n  */\r\n  handleAddTakt = (e) => {\r\n    console.log('Add takt');\r\n    this.props.taktAdd();\r\n  }\r\n\r\n  handleDeleteClick = (taktIndex) => {\r\n    console.log('Delete', taktIndex);\r\n    this.props.taktDelete(taktIndex)  \r\n  }\r\n\r\n  handleClearClick = (taktIndex) => {\r\n    console.log('Clear', taktIndex);\r\n    this.props.taktClear(taktIndex)    \r\n  }\r\n\r\n  handleCopyClick = (taktIndex) => {\r\n    console.log('Copy', taktIndex);\r\n    this.props.taktCopy(taktIndex)\r\n  }\r\n\r\n  handlePasteClick = (taktIndex) => {\r\n    console.log('Paste', taktIndex, this.props.clipboard);\r\n\r\n    if (this.props.clipboard.length === 0) {\r\n      console.log('Empty clipboard');\r\n      return;\r\n    }\r\n\r\n    this.props.taktPaste(taktIndex);\r\n  }\r\n\r\n\r\n  handlePlayerStep = () => {\r\n      this.updateTimeControls();\r\n  }\r\n\r\n  /*\r\n  * GETTERS\r\n  */\r\n  get timePointerHeight() {\r\n    return this.props.tracks.length * this.props.noteHeight + this.props.timePointerWidth;\r\n  }\r\n\r\n  get timestamp() {\r\n    //console.log('getTimestamp',this.props.getTimestamp);\r\n    if (this.props.playerState === PlayerStates.STOP || this.props.playerState === PlayerStates.PAUSE) {\r\n      return this.props.baseTime\r\n    } else if (this.props.playerState === PlayerStates.PLAY) {\r\n      return this.props.baseTime + (Date.now() - this.props.playerStartedAt);\r\n    }    \r\n  }\r\n\r\n  get timelineNote() {\r\n    return this.timestamp * this.props.bpms * this.props.notesInPartCount;\r\n  }\r\n\r\n  get timePointerXPos() {\r\n    return this.timelineNote * this.props.noteWidth - this.props.timePointerWidth/2 + 2 + this.props.trackControlWidth;\r\n  }\r\n\r\n  get getFormattedTime() {\r\n    let ms = this.timestamp % 1000;\r\n    let sec = Math.trunc(this.timestamp / 1000) % 60;\r\n    let min = Math.trunc(this.timestamp / 1000 / 60)\r\n    return (min+'').padStart(2,\"0\") + \":\" +(sec+'').padStart(2,\"0\") + \".\" + (ms+'').padStart(3,\"0\")\r\n  }\r\n\r\n\r\n  render () {\r\n    console.log('Render Editor');\r\n\r\n    return <div className=\"Editor\">\r\n      {/* TODO: pass needed props or connect to redux */}\r\n      <TracksPlayer onStep={this.handlePlayerStep} {...this.props} ref={this.tracksPlayerRef}/>\r\n\r\n      <div className=\"workspace no-print\"> \r\n        <Toolbar timeTextRef={this.timeTextRef}/>\r\n\r\n        <div className=\"track-container\" ref={this.tracksContainerRef}>\r\n          {/* TIMELINE */}\r\n          <div className=\"timeline\" style={{width:this.props.noteWidth * this.props.tracksLengthInNotes + \"px\", marginLeft: this.props.trackControlWidth+\"px\"}} onClick={this.handleTimelineClick}>\r\n            {\r\n               [...Array(Math.ceil(this.props.tracksLengthInNotes / this.props.notesInTakt))].map((i,k) => {\r\n                return <div key={k} className=\"timeline__takt\" style={{width: this.props.notesInTakt * this.props.noteWidth}}>\r\n                    <div className=\"takt__number\">{k+1}</div>\r\n                  </div>\r\n              })\r\n            }\r\n          </div>\r\n          {/* TIME POINTER */}\r\n          <div className=\"time-pointer\" ref={this.timePointerRef}> \r\n            <div className=\"time-pointer__stick\" style={{height: this.timePointerHeight+\"px\"}}>\r\n            </div>\r\n          </div>\r\n\r\n          {/* TRACKS */}\r\n          {\r\n            this.props.tracks.map((_track,i) => {\r\n              return <Track key={\"track_\"+i} index={i} noteWidth={this.props.noteWidth} noteHeight={this.props.noteHeight} noteClick={this.handleNoteClick} \r\n                              tracksLengthInNotes={this.props.tracksLengthInNotes} tracksLengthInTakts={this.props.tracksLengthInTakts} \r\n                              timeSignature={this.props.timeSignature}\r\n                              track={_track} ts={_track.ts} \r\n                              trackControlWidth={this.props.trackControlWidth} addTaktButtonWidth={this.props.addTaktButtonWidth}\r\n                              onVolumeChange={this.handleTrackVolumeChange}\r\n                              />\r\n            })\r\n          }\r\n\r\n          {/* TAKT CONTROLS */}\r\n          <div className=\"takt-controls\" style={{width:this.props.noteWidth * this.props.tracksLengthInNotes + \"px\", marginLeft: this.props.trackControlWidth+\"px\"}}>\r\n            {\r\n               [...Array(Math.ceil(this.props.tracksLengthInTakts))].map((i,k) => {\r\n                return <div key={k} className=\"takt-control\" style={{width: this.props.notesInTakt * this.props.noteWidth}}>\r\n                    <button className=\"takt-control__button button\" onClick={this.handlePasteClick.bind(this, k)}>Paste</button>\r\n                    <button className=\"takt-control__button button\" onClick={this.handleCopyClick.bind(this, k)}>Copy</button>\r\n                    <button className=\"takt-control__button button\" onClick={this.handleClearClick.bind(this, k)}>Clear</button>\r\n                    <button className=\"takt-control__button button\" onClick={this.handleDeleteClick.bind(this, k)}>Delete</button>\r\n                    <div style={{clear: \"both\"}}></div>\r\n                  </div>\r\n              })\r\n            }\r\n          </div>\r\n\r\n          {/* BUTTON ADD TAKT */}\r\n          <div className=\"takt-add\" style={{width:this.props.addTaktButtonWidth, height: this.props.tracks.length * this.props.noteHeight + this.props.taktControlHeight + \"px\", marginTop: -this.props.tracks.length * this.props.noteHeight - this.props.taktControlHeight + \"px\"}}\r\n                onClick={this.handleAddTakt}> \r\n                <div className=\"takt-add__content\">+</div>           \r\n          </div>\r\n\r\n        </div>\r\n        \r\n       \r\n      </div>\r\n    </div>\r\n  }\r\n}","E:\\Workspace\\git\\beat\\web\\src\\components\\app\\version\\version.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\app\\header\\header.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\userFileReader\\userFileReader.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\track.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\note.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\trackControl.js",[],"E:\\Workspace\\git\\beat\\web\\src\\assets\\data\\tracksData.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\track\\takt.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\editorContainer.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\actions\\index.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\actions\\editor.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\types.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\store.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\reducers\\index.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\reducers\\editor.js",["108"],"E:\\Workspace\\git\\beat\\web\\src\\components\\notesRenderer\\notesRenderContainer.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\toolbar\\toolbar.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\dictionary\\playerStates.js",[],"E:\\Workspace\\git\\beat\\web\\src\\redux\\selectors.js",[],"E:\\Workspace\\git\\beat\\web\\src\\components\\editor\\tracksPlayer\\tracksPlayer.js",["109"],"import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport * as PlayerStates from \"../../../redux/dictionary/playerStates\";\r\n\r\nexport default class TracksPlayer extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      //Player vars\r\n      this.timerId = 0;\r\n      this.stepDelay = 20;\r\n      this.prevNoteIndex = -1;\r\n\r\n      //Init AudioContext\r\n      this.soundBuffer = [];\r\n      this.audioCtx = this.initAudioContext();\r\n    }\r\n  \r\n    componentDidMount () {\r\n        this.initSoundBuffer();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        //PLAY STATE\r\n        if (this.props.playerState === PlayerStates.PLAY && prevProps.playerState  !== PlayerStates.PLAY) {\r\n            console.log(\"PLAY NOW\")    \r\n            this.timerId = setInterval(this.step, this.stepDelay);\r\n        } else if (this.props.playerState === PlayerStates.STOP && prevProps.playerState  !== PlayerStates.STOP) {\r\n            console.log(\"STOP NOW\")  \r\n            clearInterval(this.timerId);\r\n        } else if (this.props.playerState === PlayerStates.PAUSE && prevProps.playerState  !== PlayerStates.PAUSE){\r\n            console.log(\"PAUSE NOW\")  \r\n            clearInterval(this.timerId);\r\n        }\r\n    }\r\n\r\n    initAudioContext() {\r\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        return new AudioContext();\r\n    }\r\n\r\n    initSoundBuffer() {\r\n        this.props.tracks.forEach( (_track, trackIndex) => {\r\n        //Init empty item\r\n        this.soundBuffer[trackIndex] = {};      \r\n\r\n        this.loadAudioSample(_track.audioUrl, audioBuffer => {\r\n                //save audio buffer\r\n                this.soundBuffer[trackIndex].audioBuffer = audioBuffer;\r\n\r\n                //save gain node for track\r\n                this.soundBuffer[trackIndex].gainNode = this.audioCtx.createGain()              \r\n                this.soundBuffer[trackIndex].gainNode.connect(this.audioCtx.destination)\r\n                //console.log(\"Sample loaded\", _track.audioUrl);\r\n            })      \r\n        });\r\n    }\r\n\r\n    loadAudioSample = (url, callback) => {\r\n        //console.log(\"Loading sample\", url);\r\n        axios.get(url, {responseType: 'arraybuffer'})\r\n            .then(response => {\r\n                this.audioCtx.decodeAudioData(response.data, callback, (e) => { console.log(\"decodeAudioData failed\", e); });\r\n            })   \r\n    }  \r\n\r\n    // PLAY CYCLES\r\n    //TODO: при перемотке на последнюю ноту -она не играется\r\n    step = () => {\r\n        // console.log(\"step\", this.props.playerStartedAt);\r\n        this.playNotes();\r\n\r\n        //CALLBACK\r\n        this.props.onStep && this.props.onStep();\r\n\r\n        //Pause then end\r\n        if(this.timelineNote > this.props.tracksLengthInNotes)\r\n        {\r\n            this.props.setPlayerState(PlayerStates.PAUSE);  \r\n            this.props.setEndOfTrack(true);\r\n        }\r\n    }\r\n\r\n    playNotes = () => {    \r\n        let noteIndex = Math.trunc(this.timelineNote);\r\n    \r\n        if (noteIndex === this.prevNoteIndex)\r\n            return;\r\n        \r\n        let taktIndex = Math.trunc(this.timelineTakt)\r\n        let noteIndexInTakt = noteIndex % this.props.notesInTakt;\r\n\r\n        if (taktIndex + 1> this.props.tracksLengthInTakts) {\r\n            return;\r\n        }\r\n\r\n        //console.log('playNotes', taktIndex,noteIndexInTakt);\r\n\r\n        //console.log(noteIndex);\r\n        for (let trackIndex = 0; trackIndex < this.props.tracks.length; trackIndex++) {\r\n            const track = this.props.tracks[trackIndex];\r\n            const takt = track.takts[taktIndex];\r\n            if (takt.notes[noteIndexInTakt] > 0) {\r\n                this.playTrackSound(trackIndex);\r\n            }\r\n        }    \r\n\r\n        this.prevNoteIndex = noteIndex;\r\n    }\r\n\r\n    playTrackSound(trackIndex) {\r\n        //set gain\r\n        this.soundBuffer[trackIndex].gainNode.gain.value = this.props.tracks[trackIndex].volume; \r\n        // play sound\r\n        let source = this.audioCtx.createBufferSource();\r\n        source.buffer = this.soundBuffer[trackIndex].audioBuffer;\r\n        source.connect(this.soundBuffer[trackIndex].gainNode);\r\n        source.start();\r\n    } \r\n\r\n    //TODO: дубликат когда и editor.js ((\r\n    get timestamp() {\r\n        if (this.props.playerState === PlayerStates.STOP || this.props.playerState === PlayerStates.PAUSE) {\r\n            return this.props.baseTime\r\n        } else if (this.props.playerState === PlayerStates.PLAY) {\r\n            return this.props.baseTime + (Date.now() - this.props.playerStartedAt);\r\n        }    \r\n    }\r\n\r\n    get timelineNote() {\r\n        return this.timestamp * this.props.bpms * this.props.notesInPartCount;\r\n    }\r\n\r\n    get timelineTakt() {\r\n        return this.timelineNote / this.props.notesInTakt;\r\n    }\r\n\r\n    render() {\r\n        return false;\r\n    }\r\n}",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":191,"column":3,"nodeType":"116","messageId":"117","endLine":191,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":92,"column":9,"nodeType":"120","messageId":"121","endLine":92,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":123,"column":5,"nodeType":"116","messageId":"117","endLine":123,"endColumn":18},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"getter-return","Expected getter 'timestamp' to always return a value.","FunctionExpression","expectedAlways","no-unused-vars","'eot' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]